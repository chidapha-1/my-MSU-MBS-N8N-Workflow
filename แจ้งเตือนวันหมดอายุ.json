{
  "name": "‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 8
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -752,
        16
      ],
      "id": "9b32e99e-96f0-4bfc-b103-0c5d6465b80c",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "105kVIoUisl4dT-_uo_jM8fSUzGFfAriwpQw7VMZwmvk",
          "mode": "list",
          "cachedResultName": "‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/105kVIoUisl4dT-_uo_jM8fSUzGFfAriwpQw7VMZwmvk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "‡∏ä‡∏µ‡∏ï1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/105kVIoUisl4dT-_uo_jM8fSUzGFfAriwpQw7VMZwmvk/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -560,
        16
      ],
      "id": "0e6f46a6-d7d0-4d33-a1c2-53c9341a98f0",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "LzKeIOzNAtucQvMi",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏¥‡∏•‡∏•‡∏¥‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÉ‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏ß‡∏±‡∏ô ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠\nconst MS_PER_DAY = 24 * 60 * 60 * 1000;\n\n// ‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å\nconst out = [];\n\n// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢ parse ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏≤‡∏Å string (handle DD/MM/YYYY, MM/DD/YYYY, ‡∏´‡∏£‡∏∑‡∏≠ ISO)\n// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÅ‡∏õ‡∏•‡∏á string ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô Date object ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\nfunction parseDate(dateStr) {\n  if (!dateStr) return null; // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ‡∏Ñ‡∏∑‡∏ô null\n\n  // ‡∏•‡∏≠‡∏á parse ‡πÅ‡∏ö‡∏ö ISO ‡∏´‡∏£‡∏∑‡∏≠ standard ‡∏Å‡πà‡∏≠‡∏ô\n  let date = new Date(dateStr);\n  if (!isNaN(date.getTime())) return date; // ‡∏ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Ñ‡∏∑‡∏ô date\n\n  // ‡∏ñ‡πâ‡∏≤ fail ‡∏•‡∏≠‡∏á parse ‡πÅ‡∏ö‡∏ö DD/MM/YYYY (‡πÄ‡∏ä‡πà‡∏ô \"16/09/2025\")\n  const parts = dateStr.split('/'); // ‡πÅ‡∏¢‡∏Å string ‡∏î‡πâ‡∏ß‡∏¢ /\n  if (parts.length === 3) {\n    // assume DD/MM/YYYY\n    date = new Date(parts[2], parts[1] - 1, parts[0]); // ‡∏™‡∏£‡πâ‡∏≤‡∏á Date ‡∏à‡∏≤‡∏Å ‡∏õ‡∏µ, ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô-1, ‡∏ß‡∏±‡∏ô\n    if (!isNaN(date.getTime())) return date; // ‡∏ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Ñ‡∏∑‡∏ô date\n\n    // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á fail ‡∏•‡∏≠‡∏á assume MM/DD/YYYY\n    date = new Date(parts[2], parts[0] - 1, parts[1]); // ‡∏™‡∏£‡πâ‡∏≤‡∏á Date ‡∏à‡∏≤‡∏Å ‡∏õ‡∏µ, ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô-1, ‡∏ß‡∏±‡∏ô\n    if (!isNaN(date.getTime())) return date; // ‡∏ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Ñ‡∏∑‡∏ô date\n  }\n\n  // ‡∏ñ‡πâ‡∏≤‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á fail ‡∏Ñ‡∏∑‡∏ô null\n  return null;\n}\n\n// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô 00:00:00 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡πâ‡∏ß‡∏ô‡πÜ\nconst today = new Date();\ntoday.setHours(0, 0, 0, 0);\n\n// ‡∏•‡∏π‡∏õ‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞ item ‡πÉ‡∏ô input (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheet)\nfor (let i = 0; i < items.length; i++) {\n  const row = items[i].json; // ‡∏î‡∏∂‡∏á json ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ñ‡∏ß‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô\n\n  // ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å row\n  const name = row[\"Product Name\"]; // ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤\n  const barcode = row[\"Barcode\"]; // ‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î\n  const expiryRaw = row[\"Expire date\"]; // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡∏î‡∏¥‡∏ö (string)\n  const qty = row[\"Quantity\"]; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠\n\n  // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏•‡∏∞ ISO date\n  let daysUntil = null;\n  let expiryISO = null;\n  let status = \"‡∏õ‡∏Å‡∏ï‡∏¥\";  // ‡∏Ñ‡πà‡∏≤ default ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏\n\n  // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ expiryRaw\n  if (expiryRaw) {\n    const expiryDate = parseDate(expiryRaw); // ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏° parse ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà\n    if (expiryDate) { // ‡∏ñ‡πâ‡∏≤ parse ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à\n      expiryDate.setHours(0, 0, 0, 0); // ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô 00:00:00\n      daysUntil = Math.round((expiryDate - today) / MS_PER_DAY); // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠\n      expiryISO = expiryDate.toISOString().slice(0, 10); // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö YYYY-MM-DD\n\n      // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î status ‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç\n      if (daysUntil <= 0) {\n        status = \"‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß\"; // ‡∏ñ‡πâ‡∏≤‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß\n      } else if (daysUntil > 0 && daysUntil <= 7) {\n        status = \"‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ (‡πÄ‡∏´‡∏•‡∏∑‡∏≠ \" + daysUntil + \" ‡∏ß‡∏±‡∏ô)\"; // ‡∏ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 7 ‡∏ß‡∏±‡∏ô\n      }\n    }\n  }\n\n  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ boolean ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô\n  const notifyExpired = (daysUntil !== null && daysUntil <= 0); // true ‡∏ñ‡πâ‡∏≤‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏\n  const notifySoon = (daysUntil !== null && daysUntil > 0 && daysUntil <= 7); // true ‡∏ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î\n  const notifyPromo = notifySoon;  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ notifyPromo ‡πÄ‡∏õ‡πá‡∏ô true ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô)\n\n  // ‡πÄ‡∏û‡∏¥‡πà‡∏° object json ‡∏•‡∏á‡πÉ‡∏ô out\n  out.push({\n    json: {\n      name,\n      barcode,\n      qty,\n      expiryRaw,\n      expiryISO,\n      daysUntilExpiry: daysUntil,\n      notifyExpired,\n      notifySoon,\n      status,\n      notifyPromo  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ô‡∏µ‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÉ‡∏ô template\n    }\n  });\n}\n\n// ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å array ‡∏Ç‡∏≠‡∏á results\nreturn out;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -368,
        16
      ],
      "id": "46430a07-5203-452e-8109-f6f6e3b2bb0f",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ebdcc0ee-61bb-4740-8b7e-d41c19f87cc6",
              "leftValue": "={{$json[\"notifyExpired\"]}}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "a19268d5-0e7e-4a61-83fa-6992b4d5943c",
              "leftValue": "={{$json[\"notifySoon\"]}}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -160,
        16
      ],
      "id": "edcf8b2f-7faa-4ae3-a0fc-ebeb856ea41b",
      "name": "If"
    },
    {
      "parameters": {
        "chatId": "=7888357754",
        "text": "=üì¢ *‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏* ‚ö†Ô∏è\n\nüì¶ ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: {{ $json[\"name\"] }}\nüè∑Ô∏è ‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î: {{ $json[\"barcode\"] }}\nüìä ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {{ $json[\"qty\"] }}\nüóìÔ∏è ‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏: {{ $json[\"expiryISO\"] }}\nüìç ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {{ $json[\"status\"] }}\n\n{{ $json[\"notifyPromo\"] ? \"üí° üëâ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏£‡∏µ‡∏ö‡∏à‡∏±‡∏î‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏!\" : \"\" }}",
        "replyMarkup": "=none",
        "forceReply": {},
        "replyKeyboardOptions": {},
        "replyKeyboardRemove": {},
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        64,
        0
      ],
      "id": "260ae4fb-45e0-446b-a18b-6ee87852b110",
      "name": "Send a text message",
      "webhookId": "8a8724d6-2e65-4138-aaa2-442a55f9acc5",
      "credentials": {
        "telegramApi": {
          "id": "DtCqYaQ2D6YGLxq1",
          "name": "Telegram account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "001d3b25-89ec-4fdc-9738-aec88db6cd2d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "7ebc23a0678e44e0118feea99fbe51a6636ce9a92dc9c6157a214af0bde6017d"
  },
  "id": "V88TrJfk2HCAWAPn",
  "tags": []
}